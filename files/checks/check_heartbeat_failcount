#!/bin/bash

rc=0
RGROUPNAME=`sudo /usr/sbin/crm_resource --quiet -L |grep "Resource Group:"|gawk -F' ' {'print $3'}`
DEFAULT_RESOURCE_STICKINESS=`sudo /usr/sbin/crm_attribute -G -n default-resource-stickiness -Q 2>/dev/null`
if [ -z "$DEFAULT_RESOURCE_STICKINESS" ]; then
 DEFAULT_RESOURCE_STICKINESS=0
fi
DEFAULT_RESOURCE_FAILURE_STICKINESS=`sudo /usr/sbin/crm_attribute -G -n default-resource-failure-stickiness -Q 2>/dev/null`
if [ -z "$DEFAULT_FAILURE_RESOURCE_STICKINESS" ]; then
 DEFAULT_RESOURCE_FAILURE_STICKINESS=0
fi

PRIMARY=`sudo /usr/sbin/crmadmin -D |gawk -F' ' {'print $4'}`
NODES=(`sudo /usr/sbin/crmadmin -N |gawk -F' ' {'print $3'}`)
cnt=${#NODES[@]}
for (( i = 0 ; i < cnt ; i++ ))
do
                RESULT="0"
                RESOURCE=(`sudo /usr/sbin/crm_resource --quiet -L |grep -v "Resource Group:"|gawk -F' ' {'print $1'}`)
                rcnt=${#RESOURCE[@]}
                for (( j = 0 ; j < rcnt ; j++ ))
                do
                        RESULT=0
                        unset RESOURCE_STARTED_ON_NODE

                        RESOURCE_STARTED_ON_NODE=`sudo /usr/sbin/crm_mon -1|grep -m1 ${RESOURCE[j]}|gawk -F' ' {'print $4'}`
                        FAILS=`sudo /usr/sbin/crm_failcount -Q -G -U ${NODES[i]} -r ${RESOURCE[j]} 2> /dev/null`
                        if [ "$?" -ne "0" ] ; then
                                FAILS="0"
                        fi

                        if ! STICKINESS=`sudo /usr/sbin/crm_resource -g resource_stickiness -r ${RESOURCE[j]} --meta 2>/dev/null`; then
                                if ! STICKINESS=`sudo /usr/sbin/crm_resource -x -r ${RESOURCE[j]} 2>/dev/null | grep -E "<master|<primitive|<clone" | grep -o "resource[_-]stickiness=\"[0-9]*\"" | cut -d '"' -f 2 | grep -v "^$"`;then
                                        STICKINESS=$DEFAULT_RESOURCE_STICKINESS
                                fi
                        fi

                        if ! FAILURE_STICKINESS=`sudo /usr/sbin/crm_resource -g resource_failure_stickiness -r ${RESOURCE[j]} --meta 2>/dev/null`; then
                                FAILURE_STICKINESS=$DEFAULT_RESOURCE_FAILURE_STICKINESS
                        fi

                        if [ "$FAILS" -eq "0" ] ; then
                                let RESULT="${RESULT} + ${STICKINESS}"
                                if [ "${NODES[i]}" = "$RESOURCE_STARTED_ON_NODE" ];then
                                        var_ausgabe="${var_ausgabe}OK: ${RESOURCE[j]} gestartet auf $RESOURCE_STARTED_ON_NODE. Failcount: ${FAILS}\n\n"
                                fi
                        else
                                let "RESULT = ${RESULT} + ${STICKINESS} + ${FAILURE_STICKINESS} * $FAILS"
                                if [ "${NODES[i]}" = "$RESOURCE_STARTED_ON_NODE" ];then
                                        var_ausgabe="${var_ausgabe}CRITICAL: ${RESOURCE[j]} gestartet auf ${RESOURCE_STARTED_ON_NODE}. Failcount: ${FAILS}\n"
                                        rc=2
                                elif [ -z "$RESOURCE_STARTED_ON_NODE" ]; then
					var_ausgabe="${var_ausgabe}CRITICAL: ${RESOURCE[j]} ist gestoppt.\n"
                                        rc=2
                                else
                                        var_ausgabe="${var_ausgabe}WARNING: Failcount auf dem fuer ${RESOURCE[j]} inaktiven Node. Failcount: ${FAILS}\n"
                                        if [ $rc -eq 0 ]; then
                                                rc=1
                                        fi
                        fi
                        var_ausgabe="${var_ausgabe} - Failcount loeschen: \"crm_failcount -G -U ${NODES[i]} -r ${RESOURCE[j]} -D\"\n\n"
																
													
                        fi
                done

done
if [ $rc -eq 0 ]; then
	echo -e "Alle Resourcen ohne Fehler gestartet.\n\n"
	echo -e $var_ausgabe
elif [ $rc -eq 1 ]; then
	echo -e "FailCount fuer mind. eine Resource auf dem dafuer passivem Knoten vorhanden. Ausfuehren von \"./home/nagios/scripts/check_heartbeat_failcount\" oder Detailansicht im Nagios.\n\n"
	echo -e $var_ausgabe
else
	echo -e "Fehler fuer mind. eine Resource vorhanden. Ausfuehren von \"./home/nagios/scripts/check_heartbeat_failcount\" oder Detailansicht im Nagios.\n\n"
	echo -e $var_ausgabe
fi
exit $rc